name: Release  
  
on:  
  push:  
    branches: [master]
  pull_request:  
    branches: [master]  
  
jobs:  
  test:  
    runs-on: ubuntu-latest  
    strategy:  
      matrix:  
        python-version: ["3.9", "3.10", "3.11", "3.12"]  
      
    steps:  
    - uses: actions/checkout@v4  
    - name: Set up Python ${{ matrix.python-version }}  
      uses: actions/setup-python@v4  
      with:  
        python-version: ${{ matrix.python-version }}  
      
    - name: Install dependencies  
      run: |  
        python -m pip install --upgrade pip  
        pip install -r requirements.txt  
  
  build-binaries:  
    needs: test  
    runs-on: ${{ matrix.os }}  
    strategy:  
      matrix:  
        os: [ubuntu-latest, windows-latest, macos-latest]  
      
    steps:  
    - uses: actions/checkout@v4  
    - name: Set up Python  
      uses: actions/setup-python@v4  
      with:  
        python-version: 3.11  
      
    - name: Install dependencies  
      run: |  
        python -m pip install --upgrade pip  
        pip install -r requirements.txt  
        pip install pyinstaller  
      
    - name: Build binary  
      run: python scripts/build_binaries.py  
      
    - name: Upload artifacts  
      uses: actions/upload-artifact@v4  
      with:  
        name: binaries-${{ matrix.os }}  
        path: dist/casbin-python-cli-*  
  
  release:  
    needs: [test, build-binaries]  
    runs-on: ubuntu-latest  
    if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request'
      
    steps:  
    - uses: actions/checkout@v4  
      with:  
        fetch-depth: 0  
        token: ${{ secrets.GITHUB_TOKEN }}  
      
    - name: Set up Python  
      uses: actions/setup-python@v4  
      with:  
        python-version: 3.11  
      
    - name: Install dependencies  
      run: |  
        python -m pip install --upgrade pip  
        pip install -r requirements.txt  
        pip install wheel twine  
        npm install -g semantic-release @semantic-release/changelog @semantic-release/exec @semantic-release/github  
      
    - name: Download all artifacts  
      uses: actions/download-artifact@v4  
      with:  
        path: artifacts  
      
    - name: Move binaries to dist  
      run: |  
        mkdir -p dist  
        find artifacts -name "casbin-python-cli-*" -exec cp {} dist/ \;  
      
    - name: Semantic Release  
      env:  
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}  
      run: npx semantic-release